// =================================================================
// üîÑ MIGRATION SCRIPT - SHEETS ‚Üí FIREBASE
// =================================================================
// Description: ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Google Sheets ‡πÑ‡∏õ Firebase
// Author: Claude Code Migration Team
// Created: 2025-10-29
// =================================================================

// =================================================================
// üìÇ SECTION 1: MIGRATE USERS
// =================================================================

/**
 * 1.1 ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Sheets ‚Üí Firebase
 *
 * @returns {Object} { success: number, failed: number, errors: [] }
 */
function migrateUsersToFirebase() {
  console.log('üë• [MIGRATION] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Users...');

  const SHEET_NAME = 'SDIP Employee Database';
  const startTime = new Date().getTime();

  try {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(SHEET_NAME);

    if (!sheet) {
      throw new Error(`‡πÑ‡∏°‡πà‡∏û‡∏ö Sheet "${SHEET_NAME}"`);
    }

    const data = sheet.getDataRange().getValues();
    let successCount = 0;
    let failedCount = 0;
    const errors = [];

    // ‡∏ß‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Header)
    for (let i = 1; i < data.length; i++) {
      const username = (data[i][1] || '').toString().trim();

      if (!username) {
        continue; // ‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ username
      }

      try {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        const userData = {
          password: (data[i][2] || '').toString(),
          role: (data[i][3] || 'User').toString().trim(),
          profile: {
            name: (data[i][0] || '').toString().trim(),
            side: (data[i][4] || '').toString().trim(),
            area: (data[i][5] || '').toString().trim(),
            routes: (data[i][6] || '').toString().trim()
          }
        };

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firebase
        const success = firebaseSetUser(username, userData);

        if (success) {
          successCount++;
          console.log(`‚úÖ [MIGRATION] ${i}/${data.length - 1}: ${username}`);
        } else {
          failedCount++;
          errors.push({ row: i + 1, username, error: 'Firebase write failed' });
        }

      } catch (error) {
        failedCount++;
        errors.push({ row: i + 1, username, error: error.toString() });
        console.error(`‚ùå [MIGRATION] Error at row ${i + 1}:`, error.toString());
      }
    }

    const duration = new Date().getTime() - startTime;

    const result = {
      success: successCount,
      failed: failedCount,
      errors: errors,
      duration: duration
    };

    console.log('‚úÖ [MIGRATION] Users ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', JSON.stringify(result));

    return result;

  } catch (error) {
    console.error('‚ùå [MIGRATION] Fatal error:', error.toString());
    return {
      success: 0,
      failed: 0,
      errors: [{ error: error.toString() }],
      duration: 0
    };
  }
}

// =================================================================
// üìÇ SECTION 2: MIGRATE WORK DATA
// =================================================================

/**
 * 2.1 ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Work Data ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Sheets ‚Üí Firebase
 *
 * @returns {Object} { success: number, failed: number, errors: [] }
 */
function migrateWorkDataToFirebase() {
  console.log('üìä [MIGRATION] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Work Data...');

  const startTime = new Date().getTime();

  try {
    // 1. ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Users ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const users = firebaseGetAllUsers();

    if (!users || Object.keys(users).length === 0) {
      throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Users ‡πÉ‡∏ô Firebase - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡πâ‡∏≤‡∏¢ Users ‡∏Å‡πà‡∏≠‡∏ô');
    }

    const usernames = Object.keys(users);
    let successCount = 0;
    let failedCount = 0;
    const errors = [];

    console.log(`üìä [MIGRATION] ‡∏û‡∏ö ${usernames.length} Users - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Work Data...`);

    // 2. ‡∏ß‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
    for (let i = 0; i < usernames.length; i++) {
      const username = usernames[i];

      try {
        console.log(`üìä [MIGRATION] ${i + 1}/${usernames.length}: ${username}`);

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Work Data ‡∏à‡∏≤‡∏Å Sheets
        const workData = getUserWorkOverview(username);

        if (workData) {
          // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Firebase
          const success = firebaseSetWorkData(username, workData);

          if (success) {
            successCount++;
            console.log(`‚úÖ [MIGRATION] ${username} - ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
          } else {
            failedCount++;
            errors.push({ username, error: 'Firebase write failed' });
          }
        } else {
          failedCount++;
          errors.push({ username, error: 'No work data found' });
        }

      } catch (error) {
        failedCount++;
        errors.push({ username, error: error.toString() });
        console.error(`‚ùå [MIGRATION] Error for ${username}:`, error.toString());
      }
    }

    const duration = new Date().getTime() - startTime;

    const result = {
      success: successCount,
      failed: failedCount,
      errors: errors,
      duration: duration
    };

    console.log('‚úÖ [MIGRATION] Work Data ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', JSON.stringify(result));

    return result;

  } catch (error) {
    console.error('‚ùå [MIGRATION] Fatal error:', error.toString());
    return {
      success: 0,
      failed: 0,
      errors: [{ error: error.toString() }],
      duration: 0
    };
  }
}

// =================================================================
// üìÇ SECTION 3: MASTER MIGRATION FUNCTION
// =================================================================

/**
 * 3.1 ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Sheets ‚Üí Firebase
 *
 * ‚ö†Ô∏è ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
 *
 * @returns {Object} ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢
 */
function migrateAllDataToFirebase() {
  console.log('üöÄ [MIGRATION] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');

  const totalStartTime = new Date().getTime();

  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏¢‡πâ‡∏≤‡∏¢ Users
  console.log('\n=== STEP 1: MIGRATE USERS ===');
  const usersResult = migrateUsersToFirebase();

  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏¢‡πâ‡∏≤‡∏¢ Work Data
  console.log('\n=== STEP 2: MIGRATE WORK DATA ===');
  const workDataResult = migrateWorkDataToFirebase();

  const totalDuration = new Date().getTime() - totalStartTime;

  const summary = {
    users: usersResult,
    workData: workDataResult,
    totalDuration: totalDuration,
    completedAt: new Date().toISOString()
  };

  console.log('\n‚úÖ [MIGRATION] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
  console.log('üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•:', JSON.stringify(summary, null, 2));

  // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
  const message = `
üéâ ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!

üë• Users:
   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${usersResult.success}
   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${usersResult.failed}
   ‚è±Ô∏è ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤: ${usersResult.duration} ms

üìä Work Data:
   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${workDataResult.success}
   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${workDataResult.failed}
   ‚è±Ô∏è ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤: ${workDataResult.duration} ms

‚è±Ô∏è ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${Math.round(totalDuration / 1000)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  `;

  Browser.msgBox('Migration Complete', message, Browser.Buttons.OK);

  return summary;
}

// =================================================================
// üìÇ SECTION 4: VERIFICATION FUNCTIONS
// =================================================================

/**
 * 4.1 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Firebase
 *
 * @returns {Object} ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô Firebase
 */
function verifyFirebaseData() {
  console.log('üîç [VERIFICATION] ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Firebase...');

  try {
    const users = firebaseGetAllUsers();
    const userCount = users ? Object.keys(users).length : 0;

    const usernames = Object.keys(users || {});
    let workDataCount = 0;

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Work Data
    for (const username of usernames) {
      const workData = firebaseGetWorkData(username);
      if (workData) {
        workDataCount++;
      }
    }

    const summary = {
      users: userCount,
      workData: workDataCount,
      checkedAt: new Date().toISOString()
    };

    console.log('‚úÖ [VERIFICATION] ‡∏™‡∏£‡∏∏‡∏õ:', JSON.stringify(summary));

    const message = `
üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Firebase:

üë• Users: ${userCount}
üìä Work Data: ${workDataCount}

${workDataCount < userCount ? '‚ö†Ô∏è ‡∏°‡∏µ User ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ Work Data' : '‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô'}
    `;

    Browser.msgBox('Firebase Verification', message, Browser.Buttons.OK);

    return summary;

  } catch (error) {
    console.error('‚ùå [VERIFICATION] Error:', error.toString());
    Browser.msgBox('Error', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: ' + error.toString(), Browser.Buttons.OK);
    return null;
  }
}

/**
 * 4.2 ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase
 */
function testFirebaseConnection() {
  console.log('üß™ [TEST] ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase...');

  const isConnected = firebaseTestConnection();

  if (isConnected) {
    Browser.msgBox('Test Result', '‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', Browser.Buttons.OK);
  } else {
    Browser.msgBox('Test Result', '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡πÑ‡∏î‡πâ\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:\n- FIREBASE_CONFIG ‡πÉ‡∏ô FirebaseService.gs\n- Internet connection\n- Firebase Database Rules', Browser.Buttons.OK);
  }

  return isConnected;
}

// =================================================================
// üìÇ SECTION 5: ROLLBACK FUNCTIONS
// =================================================================

/**
 * 5.1 ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Work Data ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Firebase
 *
 * ‚ö†Ô∏è ‡∏£‡∏∞‡∏ß‡∏±‡∏á! ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Work Data ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function clearAllWorkDataFromFirebase() {
  console.warn('‚ö†Ô∏è [ROLLBACK] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö Work Data ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');

  const confirm = Browser.msgBox(
    '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
    '‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö Work Data ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Firebase?',
    Browser.Buttons.YES_NO
  );

  if (confirm !== 'yes') {
    console.log('‚ùå [ROLLBACK] ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    return false;
  }

  return firebaseDelete('workData');
}

console.log('‚úÖ MigrationScript.gs loaded successfully');
